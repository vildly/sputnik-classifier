# See:
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
# for accessing GitHub default variables!

name: GKE pipeline

on:
  push:
    branches:
      - main
    paths:
      # Only trigger if changes occur in these files/dir
      - "**/*.yml"
      - "**/*.yaml"
      - "**/*.py"
      - "**/*.go"
      - "**/Dockerfile"

env:
  # Cluster name
  GKE_CLUSTER: northstar-k8s
  # Cluster zone
  GKE_ZONE: europe-north1
  # image tag based of the "branch.commit-sha"
  # Only a-z, 0-9, _ (underscores), . (periods) and - (hyphens) are allowed.
  # IMAGE_TAG: ${{ github.ref_name || 'default' }}-${{ github.sha }}
  IMAGE_TAG: "latest"
  # Artifact registry zone
  GAR_ZONE: europe-north1
  # Artifact registry repository
  GAR_REPO: northstar-repo

jobs:
  common:
    name: Common setup
    runs-on: ubuntu-latest
    # May be needed for "get-gke-credentials" to work:
    permissions:
      contents: "read"
      id-token: "write"
    steps:
    # IMPORTANT!
    # THIS MUST ALWAYS BE FIRST OTHERWISE IT
    # OVERWRITES THE GENERATED KUBECTL FILE.
    # #######################################
    # Required for the "docker build" to work
    # https://github.com/marketplace/actions/checkout
    - name: Checkout
      uses: actions/checkout@v4.2.2

    # Setup gcloud CLI
    # https://github.com/marketplace/actions/authenticate-to-google-cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2.1.8
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}

    # Get the GKE credentials so we can deploy to the cluster
    # https://github.com/marketplace/actions/get-gke-credentials
    - name: Get GKE Credentials
      uses: google-github-actions/get-gke-credentials@v2.3.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Upload a Build Artifact
    # https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.1
      with:
        # Name of the artifact to upload.
        # Optional. Default is 'artifact'
        name: common-artifact
        # A file, directory or wildcard pattern that describes what to upload
        # Required.
        path: .
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day.
        # Maximum 90 days unless changed from the repository settings page.
        # Optional. Defaults to repository settings.
        retention-days: 1


  build:
    name: Build and publish
    needs: common
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [ "almaz", "mir" ]
    steps:
    # Download a Build Artifact
    # https://github.com/marketplace/actions/download-a-build-artifact
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        # Name of the artifact to download.
        # If unspecified, all artifacts for the run are downloaded.
        # Optional.
        name: common-artifact
        # Destination path. Supports basic tilde expansion.
        # Optional. Default is $GITHUB_WORKSPACE
        # path:

    # GitHub Action to login against a Docker registry
    # https://github.com/marketplace/actions/docker-login
    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.GAR_ZONE }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GKE_SA_KEY }}


    # Build the Docker image
    # -f -> defines where the Dockerfile is located
    # --tag ...
    # ...
    # dir/nextdir -> defines where the build output will be put
    #                (using the same as the Dockerfile is required if it contains multi-build steps)
    - name: Build ${{ matrix.image }} docker image
      run: |-
        docker build \
          -f ms/${{ matrix.image }}/Dockerfile \
          --tag "$GAR_ZONE-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/$GAR_REPO/${{ matrix.image }}" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          ms/${{ matrix.image }}/

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "$GAR_ZONE-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/$GAR_REPO/${{ matrix.image }}"


  deploy:
    name: Deployment
    needs: build
    runs-on: ubuntu-latest
    steps:
    # Download a Build Artifact
    # https://github.com/marketplace/actions/download-a-build-artifact
    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.8
      with:
        # Name of the artifact to download.
        # If unspecified, all artifacts for the run are downloaded.
        # Optional.
        name: common-artifact
        # Destination path. Supports basic tilde expansion.
        # Optional. Default is $GITHUB_WORKSPACE
        # path:

    # GitHub Action to login against a Docker registry
    # https://github.com/marketplace/actions/docker-login
    - name: Docker Login
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.GAR_ZONE }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GKE_SA_KEY }}

    # IMPORTANT!
    # Make sure to add the each variable to the CI/CD variables on GitHub.
    - name: Set secrets
      run: |-
        kubectl delete secret gke-secrets || true && \
        kubectl create secret generic gke-secrets --from-literal=MONGODB_URI=${{ secrets.MONGODB_URI }}

    - name: Apply
      run: |-
        kubectl apply -f k8s/mongodb.yaml -f k8s/almaz.yaml

    - name: Get pods
      run: |-
        kubectl get pods
