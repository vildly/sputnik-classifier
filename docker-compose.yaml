# docker-compose.yaml
# Ports mapping:
# internal ms: 400X
# external ms: 500X
services:
  # Python preprocessor
  mir:
    container_name: mir
    build:
      context: ./ms/mir/
      dockerfile: Dockerfile
    networks:
      - net
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      MONGODB_URI: "mongodb://mongodb:27017"
      RABBITMQ_URI: "amqp://rabbitmq:5672"
      RABBITMQ_QUEUE: "test"

  # # GO API
  # almaz:
  #   container_name: almaz
  #   build:
  #     context: ./ms/almaz/
  #     dockerfile: Dockerfile
  #   networks:
  #     - net
  #   ports:
  #     # Make sure this matches with the environment variable
  #     - "5000:80"
  #   depends_on:
  #     - mongodb
  #   environment:
  #     # Hostname must match with the container_name of mongo
  #     MONGODB_URI: "mongodb://mongodb:27017"
  #     PORT: 80
  #     SECRET: "SUPERSECRETKEYSHOULDNTBEHERE"
  #     # Uncomment these if exposing the API outwards directly:
  #     # TLS_KEY_FILE:
  #     # TLS_CERT_FILE:
  #     # TLS_PORT:

  mongodb:
    container_name: mongodb
    image: mongo:8.0.5 # https://hub.docker.com/_/mongo/tags
    networks:
      - net
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:alpine # https://hub.docker.com/_/rabbitmq/tags
    networks:
      - net
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

networks:
  net:
    name: net

volumes:
  mongo_data:
    name: mongo_data
  rabbitmq_data:
    name: rabbitmq_data
